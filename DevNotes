Working on the big apartments_dot_com Debug:

Work flow:
Entry function (ln 279) takes in the items array from the json as a paramater. 
->
For every entry (they are dictionaries) in the array it gets sent to make_blob(ln 82)
    Takes an array of informative fields and checks item for them. If found, adds that to the parts arr.
->
parts array goes to normalize_text (ln 72) to clean update
-> then goes to extract_plan (ln 189)
    ISSUE: one of the reg extractions takes in "One Bedroom, One Bath $1,020 - $1,820 1 Bed 1 Bath 700 sq ft $250 Deposit One Bedroom, One Bath Floor Plan Details One Bedroom, One Bath" and matches ","
    SOLUTION: adjusted reg ex to require a digit before comma: added \d before [\d,]
The file is now returning, no compilation or running errors

However
    ISSUE: The first number found (typically price) gets used in all numerical categoies
    SOLUTION: added (?<!\$)\s* before rest of reg expression (ln 62) to ensure we skip any $ ranges so dollars dont get used for sq ft
        changed from match to search as well in code (ln 155)

    ISSUE: The use of .group() didn't work because of it now being search
    SOLUTION: split the serch object into an array on "-"
            removed extra values like $ or sq ft in the to int method

Current position: The floor plan edits mostly work, they get overwritten by the reconciliation function (ln 282) because the per unit info is funky. Hash that out until further notice (if statements at ln 331 and 341 commented for now)

Unit control flow: parse_apartment_items -> make_blob (for each item) -> extract_unit (if this.kind is "unit")

    ISSUE: the plans dont always have correct sq ft and prices: the sq ft is usualy the same as price
    SOLUTION: add sq ft patterm to begining of the reg ex to allign with unit blob "\s*sq\s*ft\s* (ln 250)

    ISSUE: some blobs are combining into one, meaning only the first one gets recognized as a unit.
        This is happening because some parses from diffbot have "summary" with both units in them. This seems to happen for floor plans, combining the units into one summary. Meaning we need to unpack this in the control flow.
    SOLVE: Created a split units function that splits the blob into all its own units and returns it, then each unit in that list gets called ectract_unit.

Now units are processed with mostly accurate price, sq ft, and coverage of all units. However each of them have their own respective issues:
    MAA: cannot properly extract names of units
        upon further inspection it seems it is not noticing the plan headers as plan headers
    The Monte: Has repeats for mamu of the units
    Garrison: putting everything under one bucket: "A4 Traditional" "A4 Classic" all fall nder "A3 Traditional"
        The is_unit function catches floor plans as units, the line 119 RE_UNIT_ID.search(blob)
END OF DAY NOTES:
    Sophiloren: mstakes A1s as E1 rest correct
    Garrison: Double entries for everything
    maa: does not pull any names, only ctaches units that are part of floor plans with >=3 units, single offs dont get hit.
    Monte: Contains doubles, "misses one-and-half-bath" name

    ISSUE: Only pulling units in groups of >=3
        List call only extracts repeating patters. FOr the case of single entries, rip what info you can under  a "base" unit.

        examples: 
        maa:
        {
          "date": "Fri, 04 Oct 2024 00:00:00 GMT",
          "summary": "Studio 0x1 652-877 SF                                                                      $1,490 \u2013 $2,270                                                                                                                                                                                                                      Studio                                     1 Bath                                         662 Sq Ft                                                                                                                                                                           View Studio 0x1 652-877 SF Floor Plan Details                                         Tour Floor Plan",
          "title": "Unit"
        },

        200Post:
         {
            "date": "Wed, 25 Sep 2024 00:00:00 GMT",
            "summary": "Ellis (E1A) - Short Term                                                                      $3,154                                                                                                                                                                                                                      Studio                                     1 Bath                                         475 Sq Ft                                                                                                                                                                           View Ellis (E1A) - Short Term Floor Plan Details",
            "title": "Ellis (E1A) - Short Term",
            "btn": "Send Message"
          },

          goal here is to find similarities of : where thes ego in control flow, how to direct them properly, how to extract propery.

          STEP 1: add "send message" as indicator of unit so both go down the elif kind == unit flow.
            adjusted make blob to includ btn
          STEP 2: broaden unit extract to include info from one offs
            curently extract does not get one offs because split unit makes a mistake
            Returned [blob] (original) if there were no seperate units detected
          STEP 3: try to fill i name and unit id as best as possible for one offs
                filled in by extracting until price (ln 270)
        ISSUE: Bayside village does no extract names propleru for single offs, also is only extractng one per flor plan type, not catching patterns
            The names get cut out for the units info for som eof them
            Seems like its getting lost in unit split
        SOLVE: edited split function reg ex to include - so we can pull all units

        ISSUE: names not pulled for bayside
            singles  and triples pull, not doubles. for all
        SOLVE: Theres typicaly a "base" unit thats mpstly empty before groups of three. If we can find that and extract floor plan from it we lit.

        ISSUES: There are reapeats for garrison and 95 WALL and monte, sometimes the first unit gets put as the plan_name ref (blocked that by making len>100 in the if statement to not go down that flow)
        SOLVE: Used a duplicate set for the double entries

        END OF THE DAY: Almost all apartments are getting digested, only picking on of the two for groups of 2, and the plane_name is finickey, unit names work as intended

        Added dedupe to apartments.com parser, injests floor plans and units, filters out empty units, and units that breach containts.

        END OF THE DAY: Most plans and units seem to get processed, constraints filter well, till not getting all units, proly 70-80%.
        NEXT: Ranking the filtered apartments.

        Created scoring, returns top 5 sorted from filtered units. So no matter what filtered units will return the top 5 or less (if not 5 units) units per link

        END OF THE DAY: Some sights return no filterd units, need to determine if the isue is becauyse nothing is parsed, if reqs are too strict, or if it ejects in a loop condiiton (most lilkey)

        found issue was in dat availability boolean

        added a conversion to datetime if the availabiloity date was a str

        now returns filtered list of units that fit in prefs with their scores.

        NEXT: Figureout how to rank top 5 apartments across alll links -> figure out how to send them to frontend -> display them

        Was able to create a count of links and add them to master list. Also propgates errors from diff bot and makes sure code deos not just fail.
        Current issue: Not all links are returning units, this seems to be on diffbot side where for some sights it pick up units vs for other sit picks up reviews

        Add fields to diffbot call to see if it works better
        -- still a bit slow. 

        Moving forward now, in the future we can revisit parser to handle BOTH :review jsons AND not picking up single or double lisgtings for some

        ISSUE: need to get the information from top 5 back to front end
        SOLVE: add the data to the get/queue that gets hit during the poll

        END OF DAY: Moved on 60% parse success. Now when the polling ends, it calls a result endpoint. If maaster list is empty this correctly returns and error, otherwise it returns the data in a json {"data" : array}.

        NEXT: Make sure polling and board refreash have not been inhibited by addition of prmoise, and displau results when available.

        ISSUE: Polling is p much useless while we request from diff bot
        SOLVE: added new method of getting parser info, using aiohttp instead of requests

        Polling seems to work, results are being passed through /api/results as intended

        NOW: Display results 

        END OF DAU: polling seems to work, the data gets passed up to api route
        
        NEXT: Have to make sure results array gets saved, currently gets reloaded when state does, also the scores of the top 5 are the same so may need to make a more granular metric

        SOLVE: Was able to edit all the types to make sure they dont raise object error, displays resultsArray when it exists, shows the top 5 ranking.

        ISSUE: Algorithm ranks everything the same, meaning rn its only filtering shit out. 
        SOLVE: changed price scale to just the max constraint for now

        END OF DAY: You can submit links, most will get parsed, some will return an error. Whent the top 5 gets computed, it gets passed up to the front end. Displays results like regular text.

        NEXT: Make results in a pop so it doesnt crowd board, connect to runIds so we can persist in db, maybe fine tune algorithm.

        END OF DAY: added modal pop up for results, added pref panel with input (they go no where) and changes analysis to be POST and carry with it the prefs (empty rn)

        NEXT: Attach panel to actually save input->Have the front end send down the user prefs, which are by default empty values->Use these and fill in default values to compute. 

        SOLVE: added batch id to the entries. So when u click analysis, all links with 'pending' status get the same batch id and prefs passed down from frontend. 

        END OF DAY: When user applies changes, they pass down values with click of analysis. In backend, all links that were pending at time of click get the same batch id and prefs that were passed down

        NEXT: figure out how to pass the preferences to ranker instead of globals, ensure that links in the same batch get ranked tg.
        


